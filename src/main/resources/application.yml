spring:
  listener:
    simple:
      auto-startup: true
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/blueprintdb
    username: blueprintdb
    password: blueprintdb
  document:
    queue:
      name: blueprint-queue
  jpa:
    generate-ddl: true
    show-sql: true
    ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        temp:
          use_jdbc_metadata_defaults: false


#Blueprint RabbitMQ configuration.It should be explained and presented during presentation.
  host: localhost
  virtual-host: tradeshift
  port-listener: 55671

# Certification.It should be explained and presented during presentation.
tls:
  keystore:
    location: classpath:blueprint.eu-west-1.test.ts.sv.pkcs12
    password: shifthappens

# Metrics configuration example
management:
  endpoints:
    web:
      exposure:
        include: metrics, health, info
    jmx:
      exposure:
        include: metrics
  endpoint:
    health:
      show-details: always

#Micrometer #Datadog #statsd
management.metrics.export.statsd.enabled: true # Whether exporting of metrics to StatsD is enabled.
management.metrics.export.statsd.flavor: datadog # StatsD line protocol to use.
management.metrics.export.statsd.port: 8125 # Port of the StatsD server to receive exported metrics.
management.metrics.export.statsd.host: localhost # Host of the StatsD server to receive exported metrics.
# Optional
management.metrics.export.statsd.max-packet-length: 1400 # Total length of a single payload should be kept within your network's MTU.
management.metrics.export.statsd.polling-frequency: 10s # How often gauges will be polled. When a gauge is polled, its value is recalculated and if the value has changed (or publishUnchangedMeters is true), it is sent to the StatsD server.
management.metrics.export.statsd.publish-unchanged-meters: true # Whether to send unchanged meters to the StatsD server.